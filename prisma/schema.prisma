generator client {
       provider = "prisma-client-js"
     }

     datasource db {
       provider = "postgresql"
       url      = env("DATABASE_URL")
     }

     model User {
       id            String    @id @default(cuid())
       name          String?
       email         String?   @unique
       emailVerified DateTime?
       image         String?
       accounts      Account[]
       resumes       Resume[]
       answers       Answer[]
     }

     model Account {
       id                String  @id @default(cuid())
       userId            String  @map("user_id")
       type              String
       provider          String
       providerAccountId String  @map("provider_account_id")
       refresh_token     String? @db.Text
       access_token      String? @db.Text
       expires_at        Int?
       token_type        String?
       scope             String?
       id_token          String? @db.Text
       session_state     String?
       user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

       @@unique([provider, providerAccountId])
       @@index([userId])
     }

     model Resume {
       id          String   @id @default(cuid())
       userId      String   @map("user_id")
       filePath    String
       uploadedAt  DateTime @default(now())
       user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

       @@index([userId])
     }

     model Answer {
       id          String   @id @default(cuid())
       userId      String   @map("user_id")
       questionId  String
       answerText  String   @map("answer_text")
       createdAt   DateTime @default(now())
       user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

       @@index([userId])
     }